<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!--TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks-->
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>GFrag</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>GFrag</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.gfrag</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!--WindowsPackageType>None</WindowsPackageType-->

		<!--SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion-->
		<!--SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion-->
		<!--SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<!--SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion-->
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>True</GenerateTestArtifacts>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<PackageCertificateKeyFile>GFrag_TemporaryKey.pfx</PackageCertificateKeyFile>
		<PackageIcon>icon.png</PackageIcon>
		<Configurations>Debug;Release;DevBug</Configurations>

	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
	  <MauiCss Remove="Resources\Raw\Css\login.css" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="AathifMahir.Maui.MauiIcons.Material.Outlined" Version="4.0.0" />
		<PackageReference Include="ArmDot.Client" Version="2025.3.0" />
		<PackageReference Include="ArmDot.Engine.MSBuildTasks" Version="2025.3.0" />
		<PackageReference Include="CommunityToolkit.Maui" Version="9.1.1" />
		<PackageReference Include="FFImageLoading.Maui" Version="1.2.7" />
		<PackageReference Include="Google.Apis.Drive.v3" Version="1.68.0.3627" />
		<PackageReference Include="LightHTTP" Version="1.0.2" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.1" />
		<PackageReference Include="Microsoft.Toolkit.Uwp.Notifications" Version="7.1.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.Data.SQLite" Version="1.0.119" />
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="AccountCreator.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="FilesPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="LoginPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="MultiUpload.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="SettingsPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="ShareModal.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="UnShareModal.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="UploadPage.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

	<ItemGroup>
	  <None Update="icon.png">
	    <Pack>True</Pack>
	    <PackagePath>\</PackagePath>
	  </None>
	</ItemGroup>
	<ItemGroup>
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" />
	</ItemGroup>
	<ItemGroup>
	  <Folder Include="Resources\Raw\NewFolder1\" />
	  <Folder Include="Resources\Raw\Js\" />
	  <Folder Include="Resources\Raw\NewFolder\" />
	</ItemGroup>
	<Target Name="Protect" AfterTargets="Build">
		<ItemGroup>
			<!-- Include the built assembly -->
			<Assemblies Include="$(TargetDir)$(TargetFileName)" />
		</ItemGroup>
		<!-- Obfuscate the assembly -->
		<ArmDot.Engine.MSBuildTasks.ObfuscateTask Inputs="@(Assemblies)" ReferencePaths="@(_ResolveAssemblyReferenceResolvedFiles->'%(RootDir)%(Directory)')" />
	</Target>

	<Target Name="RemoveTrial" AfterTargets="Protect">
		<ItemGroup>
			<!-- Input the obfuscated assembly -->
			<ObfuscatedAssembly Include="$(TargetDir)$(TargetFileName)" />
		</ItemGroup>
		<!-- Run TrialRemover.exe on the obfuscated assembly -->
		<!--Exec Command="ArmDotTrialRemover.exe @(ObfuscatedAssembly->'%(FullPath)')" -->

		<!-- Rename the output file back to the original assembly name -->
		<!-- Exec Command="move /Y @(ObfuscatedAssembly->'%(RootDir)%(Directory)%(Filename)_Trial_Removed.dll') @(ObfuscatedAssembly->'%(FullPath)')" -->
	</Target>


</Project>
